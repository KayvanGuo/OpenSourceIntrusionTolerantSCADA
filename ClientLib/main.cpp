//***************************************************************************
//                          main.cpp  -  description
//                             -------------------
//  begin            : Sat Apr 11 21:36:43 2015
//  generated by     : pvdevelop (C) Lehrig Software Engineering
//  email            : lehrig@t-online.de
//***************************************************************************
#include "pvapp.h"
#include <thread>
// todo: comment me out. you can insert these objects as extern in your masks.
//rlModbusClient     modbus(modbusdaemon_MAILBOX,modbusdaemon_SHARED_MEMORY,modbusdaemon_SHARED_MEMORY_SIZE);
//rlSiemensTCPClient siemensTCP(siemensdaemon_MAILBOX,siemensdaemon_SHARED_MEMORY,siemensdaemon_SHARED_MEMORY_SIZE);
//rlPPIClient        ppi(ppidaemon_MAILBOX,ppidaemon_SHARED_MEMORY,ppidaemon_SHARED_MEMORY_SIZE);
#define LOC "localhost"
#define PORT 5502

void readFromServer(PARAM *p, int s_id) {
    char buf[MAX_PRINTF_LENGTH + 1];
    while(1) {
        //Read
        tcp_rec(&s_id, buf, sizeof(buf) - 1);
        //Send 
        pvtcpsend(p, buf, strlen(buf));
    }
}

void readFromBrowser(PARAM *p, int s_id) {
    char event[MAX_EVENT_LENGTH];
    pvClearMessageQueue(p);
    while(1) {
        pvPollEvent(p,event);
        tcp_send(&sock_id, event, strlen(event));
    }
}

int pvMain(PARAM *p)
{
int ret;
int soc_id;

  pvSendVersion(p);
  pvSetCaption(p,"ClientLib");
  pvResize(p,0,1280,1024);
  //pvScreenHint(p,1024,768); // this may be used to automatically set the zoomfactor
  ret = 1;
  //pvGetInitialMask(p);
  //if(strcmp(p->initial_mask,"mask1") == 0) ret = 1;
  //TODO: get addrews and port of tcp_con
  tcp_init();
  soc_id = tcp_con(LOC, PORT);
  std::thread server (readFromServer,p,soc_id);
  std::thread browser (readFromBrowser,p,soc_id);
}

#ifdef USE_INETD
int main(int ac, char **av)
{
PARAM p;

  pvInit(ac,av,&p);
  /* here you may interpret ac,av and set p->user to your data */
  pvMain(&p);
  return 0;
}
#else  // multi threaded server
int main(int ac, char **av)
{
PARAM p;
int   s;

  pvInit(ac,av,&p);
  /* here you may interpret ac,av and set p->user to your data */
  while(1)
  {
    s = pvAccept(&p);
    if(s != -1) pvCreateThread(&p,s);
    else        break;
  }
  return 0;
}
#endif
